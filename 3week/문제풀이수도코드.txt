1629번 문제

1) 지수법칙과 모듈러 연산을 이용해서 풀이했습니다.

2) 1. Scanner 클래스를 사용하여 사용자 입력을 받습니다.
   2. 사용자로부터 세 개의 long 타입 변수 A, B, C를 입력 받습니다.
   3. pow 메소드를 호출하여 A의 B 제곱에 대한 결과를 계산한 뒤 출력합니다.
   4. pow 메소드는 A와 지수를 인자로 받아, A의 지수 제곱을 재귀적으로 계산하는 과정을 거칩니다.
   5. 지수가 1일 경우 A를 리턴합니다.
   6. 지수가 짝수일 경우에는 A^(exponent / 2)의 값을 반복적으로 구하고, 결과는 이 두 값을 곱한 것입니다.
   7. 지수가 홀수일 경우에는 A^(exponent / 2) * A^(exponent / 2) * A를 구합니다.
   8. 각 단계마다 결과를 C로 나눈 나머지를 취하여 반환합니다.

1654번 문제

1) 이분탐색 문제입니다.
   upper bound 라는 상한 방식과 scanner를 써서 풀이햇습니다.

2) 1. Scanner 클래스를 사용하여 사용자 입력을 받습니다.
   2. 사용자로부터 두 개의 int 타입 변수 K, N을 입력 받습니다.
   3. int형 배열 arr을 선언하여 랜선의 길이를 저장할 배열을 만듭니다.
   4.저장하면서 그 중 최대값을 찾습니다.
   5. max 길이를 기준으로 이분 탐색 알고리즘을 사용하여 탐색합니다.
   6. max 길이에서 1을 더한 값이 구간의 최대 값으로 설정됩니다.
   7. 탐색 횟수가 적어질수록 탐색 범위를 좁혀나갑니다.
   8. 탐색 범위가 좁아진다는 것은 원하는 개수 이상의 랜선을 만들 수 있는 길이가 나온다는 뜻입니다.
   9. 목표 개수를 만들 수 있는 길이 중 최댓값을 출력합니다.

1920번 문제

1) 이분탐색 문제입니다.
   중간 인덱스를 구하고, 중간값과 key값을 비교한 후
   비교값에 따라 범위를 왼쪽, 오른쪽 혹은 값이 같은 경우는 해당 인덱스를 반환하는 식으로 풀이했습니다.

2) 1. Scanner 클래스를 사용하여 사용자 입력을 받습니다.
   2. 사용자로부터 하나의 int 타입 변수 N을 입력 받습니다.
   3. N개의 int형 요소를 가지고 있는 배열 arr을 선언 및 초기화합니다.
   4. 사용자로부터 M개의 int 타입 변수 M을 입력 받습니다.
   5. 배열 arr을 정렬합니다. (반드시 정렬돼 있어야 함)
   6. 이분 탐색 알고리즘을 사용하여 탐색합니다.
   7. 배열 arr을 재귀적으로 탐색하면서, 탐색 범위의 중간 인덱스를 찾습니다.
   8. 탐색 범위를 좁혀나가면서 목표값과 일치하는 배열의 인덱스를 찾습니다.
   9. 찾고자 하는 값이 배열 안에 없으면 -1을 리턴합니다.


2740번 문제

1) 행렬곱셈 문제입니다. 반복문으로 풀이했습니다.

2) 1. BufferedReader 클래스를 사용하여 사용자 입력을 받습니다.
   2. 사용자로부터 두 개의 int 타입 변수 N, M을 입력 받습니다.
   3. N x M 크기의 2차원 정수 배열 A를 선언하여 초기화합니다.
   4. N개의 행에 대해 M개의 요소를 갖는 배열 A를 초기화합니다.
   5. 사용자로부터 M, K를 입력 받습니다.
   6. M x K 크기의 2차원 정수 배열 B를 선언하여 초기화합니다.
   7. M개의 행에 대해 K개의 요소를 갖는 배열 B를 초기화합니다.
   8. 행렬 A와 B를 곱한 결과를 저장합니다.
   9. A는 i행, B는 j열이 변화하며 각 루프는 k를 돌면서 sum 변수에 A[i][k] * B[k][j]를 더합니다.
   10. 결과를 sb에 저장하여 출력합니다.

3273번 문제

1) 투포인터 문제입니다.
   배열에서 두 수의 합이 X가 되는 경우의 수를 찾고, 
   배열의 요소를 오름차순으로 정렬한 후, 
   lt와 rt 포인터를 만들고 합이 X가 되는 경우를 찾아가며 result 변수를 반환합니다. 

2) 1. count 메소드를 정의합니다.
   2. 매개변수로 int형 변수 N, int형 배열 arr, int형 변수 X를 입력 받습니다.
   3. result를 0으로 초기화합니다. 이 변수는 결과값을 저장하는데 사용됩니다.
   4. arr을 오름차순으로 정렬합니다.
   5. lt와 rt를 각각 0과 N-1로 초기화합니다.
   6. lt와 rt가 같을 때까지 다음을 반복합니다.
   7. lt와 rt의 합을 변수 sum에 저장합니다.
   8. 만약 sum이 X와 같다면, result의 값을 1 증가시키고 lt를 1 증가시킵니다.
   9. 만약 sum이 X보다 작다면, lt를 1 증가시킵니다.
   10. 만약 sum이 X보다 크다면, rt를 1 감소시킵니다.
   11. result 값을 반환합니다.
   12. main 메소드에서 Scanner 클래스를 사용하여 사용자 입력을 받습니다.
   13. 사용자가 입력한 정수 N개를 배열 arr에 저장합니다.
   14. 사용자가 입력한 정수 X를 변수 X에 저장합니다.
   15. count 메소드를 호출하여 결과값을 출력합니다.