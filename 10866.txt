1.데크의 원리를 ArrayDeque 방식을 써서 구현했습니다.

2. BufferedReader 클래스를 사용하여 사용자 입력을 읽는다.
   ArrayDeque 객체인 dq와 StringBuilder 객체인 sb를 생성한다.
   정수 N을 입력받는다. (N은 수행할 명령의 개수를 의미한다)
   N번 반복하는 루프를 실행한다. (루프 변수 i를 사용)
     문자열 배열 s를 통해 사용자로부터 입력받아 공백(" ")을 기준으로 문자열을 분할한다.
     s[0]에 대한 switch 문을 실행하여 해당 명령을 수행한다: (각 명령은 덱에서 일어나는 동작을 의미함)
         "push_front":
          s[1]에 해당하는 정수를 덱의 앞쪽에 추가한다.
         "push_back":
          s[1]에 해당하는 정수를 덱의 뒤쪽에 추가한다.
         "pop_front":
          덱이 비어있다면, sb에 -1을 추가한다.
          덱이 비어있지 않다면, 덱의 앞쪽 요소를 제거하고 sb에 추가한다.
        "pop_back":
          덱이 비어있다면, sb에 -1을 추가한다.
          덱이 비어있지 않다면, 덱의 뒤쪽 요소를 제거하고 sb에 추가한다.
        "size":
          덱의 크기를 조회하고 sb에 추가한다.
        "empty":
          덱이 비어있다면, sb에 1을 추가한다.
          덱이 비어있지 않다면, sb에 0을 추가한다.
        "front":
          덱이 비어있다면, sb에 -1을 추가한다.
          덱이 비어있지 않다면, 덱의 앞쪽 요소를 조회하고 sb에 추가한다.
        "back":
          덱이 비어있다면, sb에 -1을 추가한다.
          덱이 비어있지 않다면, 덱의 뒤쪽 요소를 조회하고 sb에 추가한다.
    각 명령 수행 후, sb에 줄바꿈 문자('\n')를 추가한다.
최종 sb 값을 출력한다.